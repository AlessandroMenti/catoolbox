/*
 * Copyright Â© 2019, the catoolbox contributors
 *
 * This file is free software: you can redistribute it and/or modify it under:
 * - the terms of the GNU Lesser General Public License as published by the
 *   Free Software Foundation, either version 3 of the License, or (at your
 *   option) any later version; and/or
 * - the terms of the GNU General Public License as published by the Free
 *   Software Foundation, either version 3 of the License, or (at your option)
 *   any later version.
 * If you modify this file, you may:
 * - dual license your modifications under both sets of terms, or
 * - license them under one of those sets of terms. In this case, remove the
 *   set of terms you do not wish to license your modifications under from your
 *   version.
 *
 * This file is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License and of the
 * GNU Lesser General Public License along with catoolbox. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * Additional permission under GNU GPL version 3 section 7
 *
 * If you modify this file by linking or combining it with
 * - OpenSSL (or a modified version of that library), or
 * - any C/C++ runtime library,
 * containing parts covered by the terms of their respective licenses, the
 * licensors of this file grant you additional permission to convey the
 * resulting work.
 * If you modify this software, you may extend this exception to your version
 * of the software, but you are not obliged to do so. If you do not wish to do
 * so, delete this exception statement from your version.
 */

/* This file is automatically generated from "ExportHeaderWithMaps.h.in" at
   compile time. Do not edit it manually. */

#ifndef @INCLUDE_GUARD_NAME@
#define @INCLUDE_GUARD_NAME@

#ifndef @EXPORT_MACRO_NAME@
    #if @BUILDING_STATIC_CONDITION@
        #define @EXPORT_MACRO_NAME@
        #define @EXPORT_MACRO_SYMBOL_NAME@
        #define @EXPORT_MACRO_SYMBOL_DEFAULT_NAME@
    #else /* @BUILDING_STATIC_CONDITION@ */
        #ifdef @BUILDING_LIBRARY_CONDITION@
            /* This macro marks a symbol for exporting. */
            #define @EXPORT_MACRO_NAME@ @EXPORT_MACRO_DEFINITION@
            /* This macro versions the symbol with the linker if the platform
               supports it. */
            #define @EXPORT_MACRO_SYMBOL_NAME@(function, symbol, version) \
                    @EXPORT_MACRO_SYMBOL_DEFINITION@
            /* This macro versions the symbol with the linker marking it as
               the new default implementation for a given ABI symbol. */
            #define @EXPORT_MACRO_SYMBOL_DEFAULT_NAME@(function, symbol, version) \
                    @EXPORT_MACRO_SYMBOL_DEFAULT_DEFINITION@
        #else /* @BUILDING_LIBRARY_CONDITION@ */
            #define @EXPORT_MACRO_NAME@ @IMPORT_MACRO_DEFINITION@
            #define @EXPORT_MACRO_SYMBOL_NAME@(function, symbol, version) \
                    @IMPORT_MACRO_SYMBOL_DEFINITION@
            #define @EXPORT_MACRO_SYMBOL_DEFAULT_NAME@(function, symbol, version) \
                    @IMPORT_MACRO_SYMBOL_DEFAULT_DEFINITION@
        #endif /* @BUILDING_LIBRARY_CONDITION@ */
    #endif /* @BUILDING_STATIC_CONDITION@ */
#endif /* @EXPORT_MACRO_NAME@ */

#ifndef @CALLINGCONVENTION_MACRO_NAME@
    /* Explicitly define the calling convention in the headers to avoid stack
       issues.
       We will use cdecl since it's the golden standard and it allows us to
       define functions with variadic arguments, the only limitation being that
       our library will not be able to be called by some languages (e.g. Visual
       Basic) unless we introduce specific bindings. */
    #define @CALLINGCONVENTION_MACRO_NAME@ @CALLINGCONVENTION_MACRO_DEFINITION@
#endif /* @CALLINGCONVENTION_MACRO_NAME@ */

#ifndef @DEPRECATED_MACRO_NAME@
    #define @DEPRECATED_MACRO_NAME@(message) @DEPRECATED_MACRO_DEFINITION@
#endif /* @DEPRECATED_MACRO_NAME@ */

#endif /* @INCLUDE_GUARD_NAME@ */
